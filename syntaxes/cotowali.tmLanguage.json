{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Cotowali",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#storage_types"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.cotowali",
          "match": "\\b(assert|require|as|if|else|while|for|in|continue|break|fn|return|yield|var|type|namespace)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic.cotowali",
          "match": "(\\+|-|\\*|/|%|\\*\\*)"
        },
        {
          "name": "keyword.operator.comparsion.cotowali",
          "match": "(==|!=|<=|>=|<(?!<)|>(?!>))"
        },
        {
          "name": "keyword.operator.logical.cotowali",
          "match": "(&&|\\|\\||!)"
        },
        {
          "name": "keyword.operator.reference.cotowali",
          "match": "\\&(?=\\w)"
        },
        {
          "name": "keyword.operator.pipe.cotowali",
          "match": "(\\|>|\\|>>)"
        },
        {
          "name": "keyword.operator.assignment.cotowali",
          "match": "(=|\\+=|-=|\\*=|/=|%=)"
        }
      ]
    },
    "constants": {
      "patterns": [{
        "name": "constant.language.cotowali",
        "match": "\\b(true|false|null)\\b"
      }]
    },
    "storage_types": {
      "patterns": [
        {
          "name": "storage.type.boolean.cotowali",
          "match": "\\bbool\\b"
        },
        {
          "name": "storage.type.numeric.cotowali",
          "match": "\\b(int|float)\\b"
        },
        {
          "name": "storage.type.string.cotowali",
          "match": "\\bstring\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.exponential.cotowali",
          "match": "\\b[0-9]+(\\.[0-9]+)?[eE][+-][0-9]+\\b"
        },
        {
          "name": "constant.numeric.float.cotowali",
          "match": "\\b[0-9]+\\.[0-9]+\\b"
        },
        {
          "name": "constant.numeric.decimal.cotowali",
          "match": "\\b[0-9]+\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.raw.cotowali",
          "begin": "r\"",
          "end": "\""
        },
        {
          "name": "string.quoted.raw.cotowali",
          "begin": "r'",
          "end": "'"
        },
        {
          "name": "string.quoted.double.cotowali",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.cotowali",
              "match": "\\\\."
            },
            {
              "name": "variable.other.substitution.cotowali",
              "match": "\\$\\w+"
            }
          ]
        },
        {
          "name": "string.quoted.single.cotowali",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.cotowali",
              "match": "\\\\."
            }
          ]
        }
      ]
    }
  },
  "scopeName": "source.cotowali"
}
